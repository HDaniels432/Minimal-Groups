// Verify that for each pair (A,B) in GL_2(Z/4Z),
// we can find lifts of Abar and Bbar so that
// the determinant of X = log(Abar^12), Y = log(Bbar^12),
// [X,Y], and [[X,Y],X] is nonzero.

prec := 50;

R := pAdicRing(2,prec);
I := IdentityMatrix(R,2);

function logar(M,prec)
  maxd := Ceiling(prec/2);
  X := M-I;
  ret := &+[ (-1)^(n+1)*X^n div (R!n) : n in [1..maxd]];
  return ret;
end function;

count := 0;
G := GL(2,Integers(4));
for A in G do
  for B in G do
    done := false;
    while (done eq false) do
      newA := Matrix(R,[[Integers()!A[1][1] + Random([1,2,3])*4,Integers()!A[1][2] + Random([1,2,3])*4],
      [Integers()!A[2][1]+Random([1,2,3])*4,Integers()!A[2][2]+Random([1,2,3])*4]]);
      newB := Matrix(R,[[Integers()!B[1][1] + Random([1,2,3])*4,Integers()!B[1][2] + Random([1,2,3])*4],
      [Integers()!B[2][1]+Random([1,2,3])*4,Integers()!B[2][2]+Random([1,2,3])*4]]);
      X := logar(newA^12,prec);
      Y := logar(newB^12,prec);
      Z := X*Y-Y*X;
      W := Z*X-X*Z;
      M := Transpose(Matrix([Eltseq(X),Eltseq(Y),Eltseq(Z),Eltseq(W)]));     
      d := Determinant(M);
      if not IsZero(d) then
        done := true;
        count := count + 1;
        printf "%o pairs successfully tested.\n",count;
      end if;  
    end while;
  end for;
end for;
